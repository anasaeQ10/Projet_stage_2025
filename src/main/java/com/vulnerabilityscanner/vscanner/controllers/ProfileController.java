package com.vulnerabilityscanner.vscanner.controllers;

import com.vulnerabilityscanner.vscanner.dto.UserForm;
import com.vulnerabilityscanner.vscanner.entities.User;
import com.vulnerabilityscanner.vscanner.services.UserService;
import jakarta.validation.Valid;
import org.springframework.security.core.Authentication;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

@Controller
@RequestMapping("/user/profile")
public class ProfileController {

    private final UserService userService;
    private final PasswordEncoder passwordEncoder;

    public ProfileController(UserService userService,
                             PasswordEncoder passwordEncoder) {
        this.userService = userService;
        this.passwordEncoder = passwordEncoder;
    }

    @GetMapping
    public String showProfile(Model model, Authentication authentication) {
        User user = userService.getCurrentUser(authentication);
        model.addAttribute("userInfo", user);
        return "user/profile"; // vue Thymeleaf
    }

    @GetMapping("/edit")
    public String editProfileForm(Model model, Authentication authentication) {
        User user = userService.getCurrentUser(authentication);
        UserForm userForm = new UserForm();

        userForm.setPrenom(user.getPrenom());
        userForm.setNom(user.getNom());
        userForm.setEmail(user.getEmail());
        userForm.setAdresse(user.getAdresse());
        userForm.setPays(user.getPays());
        userForm.setVille(user.getVille());
        userForm.setTelephone(user.getTelephone());

        model.addAttribute("userForm", userForm);
        return "user/edit-profile"; // vue Thymeleaf
    }

    @PostMapping("/update")
    public String updateProfile(@Valid @ModelAttribute("userForm") UserForm userForm,
                                BindingResult result,
                                Authentication authentication,
                                RedirectAttributes redirectAttributes) {
        User currentUser = userService.getCurrentUser(authentication);

        if (!result.hasFieldErrors("email") &&
                userService.existsByEmailAndIdNot(userForm.getEmail(), currentUser.getId())) {
            result.rejectValue("email", "duplicate.email", "Cet email est déjà utilisé");
        }

        if (userForm.getNewPassword() != null && !userForm.getNewPassword().isEmpty()) {
            if (!userForm.getNewPassword().equals(userForm.getConfirmPassword())) {
                result.rejectValue("confirmPassword", "match.password", "Les mots de passe ne correspondent pas");
            }

            if (passwordEncoder.matches(userForm.getNewPassword(), currentUser.getPassword())) {
                result.rejectValue("newPassword", "duplicate.password", "Le nouveau mot de passe doit être différent de l'actuel");
            }
        }

        if (result.hasErrors()) {
            return "user/edit-profile";
        }

        try {
            currentUser.setPrenom(userForm.getPrenom());
            currentUser.setNom(userForm.getNom());
            currentUser.setEmail(userForm.getEmail().toLowerCase());
            currentUser.setAdresse(userForm.getAdresse());
            currentUser.setPays(userForm.getPays());
            currentUser.setVille(userForm.getVille());
            currentUser.setTelephone(userForm.getTelephone());

            if (userForm.getNewPassword() != null && !userForm.getNewPassword().isEmpty()) {
                currentUser.setPassword(passwordEncoder.encode(userForm.getNewPassword()));
            }

            userService.updateUser(currentUser);

            redirectAttributes.addFlashAttribute("successMessage", "Profil mis à jour avec succès");
            return "redirect:/user/profile";
        } catch (Exception e) {
            redirectAttributes.addFlashAttribute("errorMessage", "Erreur: " + e.getMessage());
            return "redirect:/user/profile/edit";
        }
    }
}
