package com.vulnerabilityscanner.vscanner.controllers;

import com.vulnerabilityscanner.vscanner.entities.User;
import com.vulnerabilityscanner.vscanner.services.UserService;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import java.util.List;

@Controller
public class DashboardController {

    private final UserService userService;

    public DashboardController(UserService userService) {
        this.userService = userService;
    }

    @GetMapping("/dashboard")
    public String showDashboard(Model model, Authentication authentication) {
        // 1. Récupération des utilisateurs
        List<User> users = userService.getAllUsers();

        // 2. Debug immédiat
        System.out.println("Nombre d'utilisateurs trouvés: " + users.size());
        users.forEach(u -> System.out.println(u.getNom() + " " + u.getEmail()));

        // 3. Ajout au modèle
        model.addAttribute("users", users);
        model.addAttribute("currentUser", authentication.getName());

        return "dashboard";
    }

    @GetMapping("/edit-user/{id}")
    public String editUserForm(@PathVariable Long id, Model model) {
        User user = userService.getUserById(id);
        model.addAttribute("user", user);
        return "edit-user";
    }

    @PostMapping("/update/{id}")
    public String updateUser(@PathVariable Long id,
                             @ModelAttribute User user,
                             RedirectAttributes redirectAttributes) {
        userService.updateUser(user);
        redirectAttributes.addFlashAttribute("success", "Utilisateur mis à jour avec succès");
        return "redirect:/dashboard";
    }

    @GetMapping("/delete-user/{id}")
    public String confirmDelete(@PathVariable Long id, Model model) {
        User user = userService.getUserById(id);
        model.addAttribute("user", user);
        return "confirm-delete";
    }

    @PostMapping("/delete-user/{id}")
    public String deleteUser(@PathVariable Long id,
                             RedirectAttributes redirectAttributes) {
        userService.deleteUser(id);
        redirectAttributes.addFlashAttribute("success", "Utilisateur supprimé avec succès");
        return "redirect:/dashboard";
    }
}