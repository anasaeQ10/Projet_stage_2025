package com.vulnerabilityscanner.vscanner.services;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.vulnerabilityscanner.vscanner.dto.NvdResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

@Service
public class NvdService {

    private final RestTemplate restTemplate;

    @Autowired
    public NvdService(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    public List<NvdResponse.CveItem> searchCveItemsByKeyword(String keyword) {
        String url = "https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=" + keyword + "&resultsPerPage=10";

        HttpHeaders headers = new HttpHeaders();
        headers.set("User-Agent", "SpringBoot-App");

        HttpEntity<Void> requestEntity = new HttpEntity<>(headers);

        ResponseEntity<String> response = restTemplate.exchange(
                url,
                HttpMethod.GET,
                requestEntity,
                String.class
        );

        try {
            ObjectMapper mapper = new ObjectMapper();
            JsonNode root = mapper.readTree(response.getBody());

            JsonNode vulns = root.path("vulnerabilities");

            List<NvdResponse.CveItem> items = new ArrayList<>();

            for (JsonNode node : vulns) {
                NvdResponse.CveItem item = mapper.treeToValue(node, NvdResponse.CveItem.class);

                if (item.getCve() != null && item.getCve().getDescriptions() != null) {
                    item.setEnglishDescription(
                            item.getCve().getDescriptions().stream()
                                    .filter(desc -> "en".equals(desc.getLang()))
                                    .map(NvdResponse.Description::getValue)
                                    .findFirst()
                                    .orElse("Pas de description.")
                    );
                }
                items.add(item);
            }

            return items;

        } catch (Exception e) {
            e.printStackTrace();
            return Collections.emptyList();
        }
    }
}
